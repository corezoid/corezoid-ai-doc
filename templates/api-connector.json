{
  "obj_type": 1,
  "obj_id": 1682902,
  "parent_id": 623499,
  "title": "Actor Connector - Get Actor by ID",
  "description": "",
  "status": "active",
  "params": [
    {
      "id": "actorId",
      "name": "Actor ID",
      "type": "string",
      "required": true
    },
    {
      "id": "token",
      "name": "Authorization Token",
      "type": "string",
      "required": true
    }
  ],
  "ref_mask": true,
  "conv_type": "process",
  "scheme": {
    "nodes": [
      {
        "id": "68602771e552e82315e085e9",
        "obj_type": 3,
        "condition": {
          "logics": [
            {
              "type": "go_if_const",
              "to_node_id": "68617e37e552e82315f92bf3",
              "conditions": [
                {
                  "fun": "eq",
                  "const": "hardware",
                  "param": "__conveyor_api_return_type_error__",
                  "cast": "string"
                }
              ]
            },
            {
              "type": "go_if_const",
              "to_node_id": "686159f0e552e82315f60885",
              "conditions": [
                {
                  "fun": "eq",
                  "const": "software",
                  "param": "__conveyor_api_return_type_error__",
                  "cast": "string"
                },
                {
                  "fun": "eq",
                  "const": "api_bad_answer",
                  "param": "__conveyor_api_return_type_tag__",
                  "cast": "string"
                },
                {
                  "fun": "eq",
                  "const": "no_scheme",
                  "param": "__conveyor_api_return_description__",
                  "cast": "string"
                }
              ]
            },
            {
              "type": "go_if_const",
              "to_node_id": "68617e37e552e82315f92bf3",
              "conditions": [
                {
                  "fun": "eq",
                  "const": "software",
                  "param": "__conveyor_api_return_type_error__",
                  "cast": "string"
                },
                {
                  "fun": "eq",
                  "const": "api_bad_answer",
                  "param": "__conveyor_api_return_type_tag__",
                  "cast": "string"
                }
              ]
            },
            {
              "type": "go",
              "to_node_id": "686159f0e552e82315f60885"
            }
          ],
          "semaphors": []
        },
        "title": "",
        "description": "",
        "x": 1188,
        "y": 912,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "68602771e552e82315e085e7",
        "obj_type": 3,
        "condition": {
          "logics": [],
          "semaphors": [
            {
              "type": "time",
              "value": 30,
              "dimension": "sec",
              "to_node_id": "68602771e552e82315e085e6"
            }
          ]
        },
        "title": "",
        "description": "",
        "x": 1192,
        "y": 828,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "68602814b677ac148dddb892",
        "obj_type": 3,
        "condition": {
          "logics": [
            {
              "type": "api_rpc_reply",
              "mode": "key_value",
              "res_data": {
                "description": "{{message}}"
              },
              "res_data_type": {
                "description": "string"
              },
              "throw_exception": true,
              "exception_reason": "api_call_error"
            },
            {
              "type": "go",
              "to_node_id": "68602771e552e82315e085e8"
            }
          ],
          "semaphors": []
        },
        "title": "Reply Error",
        "description": "",
        "x": 1524,
        "y": 928,
        "extra": "{\"modeForm\":\"expand\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "68602771e552e82315e085e8",
        "obj_type": 2,
        "condition": {
          "logics": [],
          "semaphors": []
        },
        "title": "api call error",
        "description": "",
        "x": 1876,
        "y": 964,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"error\"}",
        "options": null
      },
      {
        "id": "68602737e552e82315e082bf",
        "obj_type": 2,
        "condition": {
          "logics": [],
          "semaphors": []
        },
        "title": "error getting configurations",
        "description": "",
        "x": 1732,
        "y": 340,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"error\"}",
        "options": null
      },
      {
        "id": "686029d7e552e82315e0a74f",
        "obj_type": 0,
        "condition": {
          "logics": [
            {
              "type": "api_rpc_reply",
              "mode": "key_value",
              "res_data": {
                "description": "{{__conveyor_set_param_return_description__}}"
              },
              "res_data_type": {
                "description": "string"
              },
              "throw_exception": true,
              "exception_reason": "error_getting_configurations"
            },
            {
              "type": "go",
              "to_node_id": "68602737e552e82315e082bf"
            }
          ],
          "semaphors": []
        },
        "title": "Reply Error",
        "description": "",
        "x": 1372,
        "y": 308,
        "extra": "{\"modeForm\":\"expand\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "6862b163b677ac148d4ed4df",
        "obj_type": 3,
        "condition": {
          "logics": [
            {
              "type": "go_if_const",
              "to_node_id": "6862b163b677ac148d4ed4dd",
              "conditions": [
                {
                  "fun": "eq",
                  "const": "hardware",
                  "param": "__conveyor_code_return_type_error__",
                  "cast": "string"
                }
              ]
            },
            {
              "type": "go_if_const",
              "to_node_id": "686029d7e552e82315e0a74f",
              "conditions": [
                {
                  "fun": "eq",
                  "const": "software",
                  "param": "__conveyor_code_return_type_error__",
                  "cast": "string"
                }
              ]
            },
            {
              "type": "go",
              "to_node_id": "686029d7e552e82315e0a74f"
            }
          ],
          "semaphors": []
        },
        "title": "",
        "description": "",
        "x": 1192,
        "y": 316,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "6862b163b677ac148d4ed4dd",
        "obj_type": 0,
        "condition": {
          "logics": [],
          "semaphors": [
            {
              "type": "time",
              "value": 30,
              "dimension": "sec",
              "to_node_id": "6862b163b677ac148d4ed4dc"
            }
          ]
        },
        "title": "",
        "description": "",
        "x": 1188,
        "y": 220,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "68602725b677ac148ddda4da",
        "obj_type": 1,
        "condition": {
          "logics": [
            {
              "type": "go",
              "to_node_id": "6862b163b677ac148d4ed4dc"
            }
          ],
          "semaphors": []
        },
        "title": "Start",
        "description": "",
        "x": 1012,
        "y": 120,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "68617e37e552e82315f92bf3",
        "obj_type": 0,
        "condition": {
          "logics": [
            {
              "type": "api_copy",
              "project_id": "@{{project}}",
              "stage_id": "@{{stage}}",
              "conv_id": "@{{alias}}",
              "ref": "{{root.task_id}}",
              "mode": "create",
              "group": "all",
              "data": {
                "eventType": "repeat_call_api",
                "requestBody": "{{requestBody}}",
                "url": "{{url}}",
                "pathAndQuery": "{{pathAndQuery}}",
                "responseBody": "{{responseBody}}",
                "responseHeader": "{{responseHeaders}}",
                "conveyorApiDebug": "{{__conveyor_api_debug__}}"
              },
              "data_type": {
                "eventType": "string",
                "requestBody": "object",
                "url": "string",
                "pathAndQuery": "string",
                "responseBody": "object",
                "responseHeader": "object",
                "conveyorApiDebug": "object"
              },
              "err_node_id": "68602771e552e82315e085e7"
            },
            {
              "type": "go",
              "to_node_id": "68602771e552e82315e085e7"
            }
          ],
          "semaphors": []
        },
        "title": "Send event to Smart API receiver",
        "description": "",
        "x": 1340,
        "y": 828,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "686159f0e552e82315f60885",
        "obj_type": 0,
        "condition": {
          "logics": [
            {
              "type": "api_copy",
              "project_id": "@{{project}}",
              "stage_id": "@{{stage}}",
              "conv_id": "@{{alias}}",
              "ref": "{{root.task_id}}",
              "mode": "create",
              "group": "all",
              "data": {
                "eventType": "after_call_api_error",
                "requestBody": "{{requestBody}}",
                "url": "{{url}}",
                "pathAndQuery": "{{pathAndQuery}}",
                "responseBody": "{{responseBody}}",
                "responseHeader": "{{responseHeaders}}",
                "conveyorApiDebug": "{{__conveyor_api_debug__}}"
              },
              "data_type": {
                "eventType": "string",
                "requestBody": "object",
                "url": "string",
                "pathAndQuery": "string",
                "responseBody": "object",
                "responseHeader": "object",
                "conveyorApiDebug": "object"
              },
              "err_node_id": "68602814b677ac148dddb892"
            },
            {
              "type": "go",
              "to_node_id": "68602814b677ac148dddb892"
            }
          ],
          "semaphors": []
        },
        "title": "Send event to Smart API receiver",
        "description": "",
        "x": 1344,
        "y": 924,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "686159bee552e82315f60527",
        "obj_type": 0,
        "condition": {
          "logics": [
            {
              "type": "api_copy",
              "project_id": "@{{project}}",
              "stage_id": "@{{stage}}",
              "conv_id": "@{{alias}}",
              "ref": "{{root.task_id}}",
              "mode": "create",
              "group": "all",
              "data": {
                "eventType": "after_call_api",
                "requestBody": "{{requestBody}}",
                "url": "{{url}",
                "pathAndQuery": "{{pathAndQuery}}",
                "responseBody": "{{responseBody}}",
                "responseHeader": "{{responseHeaders}}",
                "conveyorApiDebug": "{{__conveyor_api_debug__}}"
              },
              "data_type": {
                "eventType": "string",
                "requestBody": "object",
                "url": "string",
                "pathAndQuery": "string",
                "responseBody": "object",
                "responseHeader": "object",
                "conveyorApiDebug": "object"
              },
              "err_node_id": "686027e0e552e82315e08bf7"
            },
            {
              "type": "go",
              "to_node_id": "686027e0e552e82315e08bf7"
            }
          ],
          "semaphors": []
        },
        "title": "Send event to Smart API receiver",
        "description": "",
        "x": 912,
        "y": 1048,
        "extra": "{\"modeForm\":\"expand\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "6862b163b677ac148d4ed4dc",
        "obj_type": 0,
        "condition": {
          "logics": [
            {
              "type": "api_code",
              "lang": "js",
              "src": "//configuration settings (dont touch)\ndata.project = \"smart-api\";\ndata.stage = \"develop\";\ndata.alias = \"receiver-smart-api-system-transaction\";\n\n// prepare the request for api call\ndata.requestBody = {}; // must be initialized for POST/PUT methods\ndata.pathAndQuery = \"/actors/\" + data.actorId; // must be initialized\ndata.url = \"https://api.simulator.company\"; // must be initialized\n",
              "err_node_id": "6862b163b677ac148d4ed4df"
            },
            {
              "type": "go",
              "to_node_id": "6867db0fe552e823158e0e12"
            }
          ],
          "semaphors": []
        },
        "title": "Configuration",
        "description": "",
        "x": 912,
        "y": 236,
        "extra": "{\"modeForm\":\"expand\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "6867db0fe552e823158e0e12",
        "obj_type": 0,
        "condition": {
          "logics": [
            {
              "type": "api_copy",
              "project_id": "@{{project}}",
              "stage_id": "@{{stage}}",
              "conv_id": "@{{alias}}",
              "ref": "{{root.task_id}}",
              "mode": "create",
              "group": "",
              "data": {
                "eventType": "before_call_api",
                "requestBody": "{{requestBody}}",
                "url": "{{url}}",
                "pathAndQuery": "{{pathAndQuery}}"
              },
              "data_type": {
                "eventType": "string",
                "requestBody": "object",
                "url": "string",
                "pathAndQuery": "string"
              },
              "err_node_id": "68602771e552e82315e085e6"
            },
            {
              "type": "go",
              "to_node_id": "68602771e552e82315e085e6"
            }
          ],
          "semaphors": []
        },
        "title": "Send event to Smart API receiver",
        "description": "",
        "x": 908,
        "y": 512,
        "extra": "{\"modeForm\":\"expand\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "68602771e552e82315e085e6",
        "obj_type": 3,
        "condition": {
          "logics": [
            {
              "type": "api",
              "is_migrate": true,
              "rfc_format": true,
              "format": "",
              "content_type": "application/json",
              "method": "GET",
              "url": "{{url}}{{pathAndQuery}}",
              "extra": {},
              "extra_type": {},
              "extra_headers": {
                "content-type": "application/json",
                "Authorization": "Bearer {{token}}"
              },
              "cert_pem": "",
              "max_threads": 5,
              "send_sys": false,
              "debug_info": true,
              "err_node_id": "68602771e552e82315e085e9",
              "customize_response": true,
              "response": {
                "responseHeaders": "{{header}}",
                "responseBody": "{{body}}"
              },
              "response_type": {
                "responseHeaders": "object",
                "responseBody": "object"
              },
              "version": 2
            },
            {
              "type": "go",
              "to_node_id": "686159bee552e82315f60527"
            }
          ],
          "semaphors": []
        },
        "title": "API Call",
        "description": "",
        "x": 912,
        "y": 840,
        "extra": "{\"modeForm\":\"expand\",\"icon\":\"\"}",
        "options": null
      },
      {
        "id": "68602725b677ac148ddda4e2",
        "obj_type": 2,
        "condition": {
          "logics": [],
          "semaphors": []
        },
        "title": "Final",
        "description": "",
        "x": 1012,
        "y": 1516,
        "extra": "{\"modeForm\":\"collapse\",\"icon\":\"success\"}",
        "options": "{\"save_task\":true}"
      },
      {
        "id": "686027e0e552e82315e08bf7",
        "obj_type": 3,
        "condition": {
          "logics": [
            {
              "type": "api_rpc_reply",
              "mode": "key_value",
              "res_data": {
                "response": "{{responseBody}}"
              },
              "res_data_type": {
                "response": "object"
              },
              "throw_exception": false
            },
            {
              "type": "go",
              "to_node_id": "68602725b677ac148ddda4e2"
            }
          ],
          "semaphors": []
        },
        "title": "Reply",
        "description": "",
        "x": 912,
        "y": 1284,
        "extra": "{\"modeForm\":\"expand\",\"icon\":\"\"}",
        "options": null
      }
    ],
    "web_settings": [
      [],
      []
    ]
  }
}
